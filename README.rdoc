= Plan Splendiferous

== Phase Zero (MVP)

Summary of MVP
1. RDoc -- done!
1. PostgreSQL
1. Talks
1. Posts
1. Maps
1. Tweets
1. Admins

=== Models
==== Users
Admin flags & privileges & screens

Use ruby on rails 4 examples
==== Talks
Modeled on microposts

Next major step
==== Posts
Go from users to talks

Include join, leave, comment, broadcast
==== Maps
With controls
1. From Leaflet
1. Zoom in & out
1. Pan left, right, up, and down
1. Change the items shown:  venues, users
1. Change symbols (see stylesheets)
==== Tweets
Major step

Use examples in jquery mobile documentation

Prelude to more general postings to social media

=== Database
* Shift over to postresql on the development & test sides
* Add in foreign keys

=== Views
* Accounts
* Talks
* Maps (for talks)
* Posts
* Tweets

Be mindful of need to refactor as we go.

=== Docs 
Include docs (i.e. rdoc) as part of the project
* Get README to compile automatically -- done
* Get at the Model definitions from rdoc's index.html -- done
* Have created command 'tvdoc' to automagically recompile & build docs

=== Tests
Model on existing

Keep up with the rest

Use the Red/Green/Refactor approach, when not silly

=== Deployment
* Figure out what git/heroku mean by "upstream"
* Capture the talkvite.com site

== Phase I
=== Models
* Venues
* Messages
user to user
* Groups
* Memberships (in groups)))
=== Database
admin stuff, whatever that may mean

=== Views
Generalized maps

=== Internal
Make spork & guard work or kill

Get ruby to work on taqm side

== Phase II

=== Models
Relationships? --  user to user

=== Stylesheets
Ultimate customization

=== Maps
Fantasy & other collective maps

== Phase III

=== Stylesheets
Evolving
